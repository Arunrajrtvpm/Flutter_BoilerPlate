plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }
android {
    namespace "com.inapp.flutter_boilerplate"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_20
        targetCompatibility JavaVersion.VERSION_20
    }

    kotlinOptions {
        jvmTarget = '20'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.inapp.flutter_boilerplate"
        minSdkVersion 29
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

   signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions += "default"

    productFlavors {
        development {
            dimension = "default"
            manifestPlaceholders = [appName: "[DEV]Flutter BoilerPlate"]
            applicationIdSuffix = ".dev"
        }

        staging {
            dimension = "default"
            manifestPlaceholders = [appName: "[STG]Flutter BoilerPlate"]
            applicationIdSuffix = ".stg"
        }

        production {
            dimension = "default"
            manifestPlaceholders = [appName: "Flutter BoilerPlate"]
            applicationIdSuffix = ""
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
